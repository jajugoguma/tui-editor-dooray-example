/*!
 * TOAST UI Editor : Dooray Parser Plugin
 * @version 0.0.3 | Tue May 17 2022
 * @author NHN Cloud FE Development Lab <dl_javascript@nhn.com>
 * @license MIT
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["toastui"] = factory();
	else
		root["toastui"] = root["toastui"] || {}, root["toastui"]["Editor"] = root["toastui"]["Editor"] || {}, root["toastui"]["Editor"]["plugin"] = root["toastui"]["Editor"]["plugin"] || {}, root["toastui"]["Editor"]["plugin"]["doorayParser"] = factory();
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ doorayParserPlugin; }
/* harmony export */ });
var disabledParseRegCollection = {
    entity: null,
};
var markdownParsers = {
    // @ts-expect-error
    paragraph: function (node, _a) {
        var _b;
        var entering = _a.entering;
        var entity = disabledParseRegCollection.entity;
        if (!entering && entity) {
            var matches = (_b = node.stringContent) === null || _b === void 0 ? void 0 : _b.match(entity);
            if (matches) {
                node.disabledEntityParse = true;
            }
        }
    },
};
function doorayParserPlugin(__, options) {
    if (options === void 0) { options = {}; }
    var reDisabledParsing = options.reDisabledParsing;
    if (reDisabledParsing) {
        disabledParseRegCollection.entity = reDisabledParsing.entity;
    }
    return {
        markdownParsers: markdownParsers,
    };
}

__webpack_exports__ = __webpack_exports__["default"];
/******/ 	return __webpack_exports__;
/******/ })()
;
});